name: 'Emergency Call Fanout'
begin: 'start'
noinput: 'end'
voice: 'alice'
repeat: 2
timeout: 10
blocks:
	'start':
		steps: [
			{say : 'You have reached P H R I emergency notification system.'}
			{if: "!app.message", say: 'There are no active emergency notifications at this time.', goto: 'end'}
			{say: 'Listen carefully to the following emergency notification.'}
			{play: 'app.message.url'}
			{say: 'To confirm you recieved and understood this message, press 1'}
		]
		maxinput: 1
		input: 'start-input'

	'start-input':
		steps: [
			{if: "call.digits == '*'", goto: 'admin-password'}
			{if: "app.message && call.digits == '1'", execute: 'confirmMessage', say: 'Thank you.', goto: 'end'}
			{say: 'That was not a valid entry', goto: 'end'}
		]

	'end':
		steps: [
			{say: 'Goodbye.', hangup:''}
		]

	'admin-password':
		steps: [
			{say: 'Please enter the passcode.'}
		]
		maxinput: 5
		input: 'admin-password-input'

	'admin-password-input':
		steps: [
			{if: "digits != '99999'", say: 'That was not a valid passcode.', goto: 'end'}
			{goto: 'admin-menu'}
		]

	'admin-menu':
		steps: [
			{say: 'Administrative options'}
			{if: 'app.fanout', say: 'Call fanout is in progress. To stop it, press 9.'}
			{if: 'app.message', say: 'To listen to recorded message, press 0'}
			{say: 'To record new emergency message, press 1'}
			{if: '!app.fanout', say: 'To initiate call fanout, press 2'}
		]
		maxinput: 1
		input: 'admin-menu-input'

	'admin-menu-input':
		steps: [
			{if: "app.fanout && call.digits == '9'", execute: 'stopFanout', say: 'Call fanout was stopped', goto: 'admin-menu'}
			{if: "app.message && call.digits == '0'", play: 'app.message.url', goto: 'admin-menu'}
			{if: "call.digits == '1'", goto: 'record-message'}
			{if: "!app.fanout && call.digits == '2'", execute: 'loadGroups', goto: 'select-group'}
		]

	'select-group':
		steps: [
			{if: '!call.groups || call.groups.length == 0', say: 'There are no contact groups to choose from', goto: 'admin-menu'}
			{say: 'Select a contact group or press star to cancel'}
			{loop: 'call.groups', say: 'For {item.name}, press {index+1}.'}
		]
		maxinput: 2
		input: 'select-group-input'

	'select-group-input':
		steps: [
			{if: "call.digits == '*'", say: 'Fanout cancelled', goto: 'admin-menu'}
			{execute: 'startFanout'}
			{say: 'Call fanout has begun', goto: 'end'}
		]

	'record-message':
		steps: [
			{say: 'Record your message after the tone. Press any key when finished.'}
		]
		recorded: 'message-recorded'
		notrecorded: 'message-not-recorded'

	'message-recorded':
		steps: [
			{execute: 'saveMessage', say: 'Message recorded', goto: 'admin-menu'}
		]

	'message-not-recorded':
		steps: [
			{say: "Sorry, I didn't get that", goto: 'admin-menu'}
		]

	'out-start':
		steps: [
			{if: "!app.message", hangup: ''}
			{say: "This is an emergency broadcast from P H R I."}
			{if: "app.message.url", play: "app.message.url", goto: 'out-menu'}
		]

	'out-menu':
		steps: [
			{say: 'To hear this message again, press *.'}
			{say: 'To confirm that you are the intended recipient, and you understood the message, press any other key'}
		]
		input: 'out-confirm'

	'out-confirm':
		steps: [
			{if: "call.digits == '*'", play: "app.message.url", goto: 'out-menu'}
			{execute: 'confirmMessage', say: 'Thank you', goto: 'end' }
		]
